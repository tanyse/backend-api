// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Colaborador {
  id              Int    @id @default(autoincrement())
  nome            String @unique
  data_nascimento String
  telefone        String
  cpf             String @unique
  genero          String
  cargo           String
  funcao          String
  endereco    Endereco[]
  solicitados EquipamentoUsuario[]
  servicos    Servicos[]
  despesas    Despesa[]

  @@map("colaboradores")
}

model Endereco {
  id         Int         @id @default(autoincrement())
  endereco   String
  numero     Int
  bairro     String
  cidade     String
  estado     String
  cep        String
  id_usuario Int
  usuario    Colaborador @relation(fields: [id_usuario], references: [id])

  @@map("endereco")
}

model Equipamentos {
  id              Int      @id @default(autoincrement())
  descricao       String
  valor_de_compra Float
  data_compra     DateTime

  solicitados EquipamentoUsuario[]

  @@map("equipamentos")
}

model Servicos {
  id         Int          @id @default(autoincrement())
  servico    String
  id_usuario Int?
  usuario    Colaborador? @relation(fields: [id_usuario], references: [id])
  id_Status Int
  statuServico     statusServico @relation(fields: [id_Status], references: [id])

  @@map("servicos")
}

model EquipamentoUsuario {
  id             Int          @id @default(autoincrement())
  id_equipamento Int
  equipamento    Equipamentos @relation(fields: [id_equipamento], references: [id])
  id_usuario     Int
  usuario        Colaborador  @relation(fields: [id_usuario], references: [id])

  @@map("solicitados")
}

model Despesa {
  id              Int         @id @default(autoincrement())
  valor           Float
  descricao       String
  id_usuario      Int
  usuario         Colaborador @relation(fields: [id_usuario], references: [id])
  id_tipo_despesa Int
  tipoDespesa     TipoDespesa @relation(fields: [id_tipo_despesa], references: [id])

  @@map("despesas")
}

model TipoDespesa {
  id        Int    @id @default(autoincrement())
  descricao String

  despesas Despesa[]
}

model Estoque {
  id           Int    @id @default(autoincrement())
  equipamento String
  quantidade   Int

  @@map("estoque")
}

model statusServico {
  id           Int    @id @default(autoincrement())
  status String
  servico Servicos[]

  @@map("statusServico")
}


